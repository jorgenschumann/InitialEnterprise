@page "/person/{PersonId}/address/details/{Id}/"

@inherits AddressDetailsView

@using InitialEnterprise.BlazorFrontend.Controller
@using InitialEnterprise.Shared.Dtos

@inject AddressController Controller
@inject NavigationManager NavigationManager

    <form class="ui form">
        <h4 class="ui dividing header"><i class="globe icon"></i>Details Address</h4>
        <div class="field">
            <label>Street / Number</label>
            <div class="four fields">
                <div class="field @Error(nameof(PersonAddress.Street))">
                    <input type="text" @bind="@PersonAddress.Street" placeholder="Street" />
                </div>
                <div class="field @Error(nameof(PersonAddress.Number))">
                    <input type="text" @bind="@PersonAddress.Number" placeholder="Number" />
                </div>
            </div>
        </div>
        <div class="field">
            <label>City / Zip</label>
            <div class="four fields">
                <div class="field @Error(nameof(PersonAddress.Zip))">
                    <input type="text" @bind="@PersonAddress.Zip" placeholder="Zip" />
                </div>
                <div class="field @Error(nameof(PersonAddress.City))">
                    <input type="text" @bind="@PersonAddress.City" placeholder="City" />
                </div>
            </div>
        </div>
        <div class="field">
            <label>Province</label>
            <div class="two fields">
                <div class="field @Error(nameof(PersonAddress.Province))">
                    <input type="text" @bind="@PersonAddress.Province" placeholder="Province" />
                </div>
            </div>
        </div>
        <div class="field">
            <label>Country</label>
            <div class="two fields">
                <div class="field">
                    <select class="ui fluid dropdown" @bind="@PersonAddress.Country">
                        @foreach (var country in this.Countries)
                        {
                            <option value="@country.Name">@country.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>        
    </form>

<div class="ui small basic icon buttons">
    <button class="ui button" @onclick="@BackAction"><i class="reply icon"></i></button>
    <button class="ui button" @onclick="@SubmitAction"><i class="save icon"></i></button>
</div>

@code {
    [Parameter]
    public String PersonId { get; set; }

    [Parameter]
    public String Id { get; set; }
 
    protected override async Task OnInitializedAsync()
    {
        await this.Controller.SetView(this);

        await FetchAction();
    }

    private Task FetchAction()
    {
        return TryRun(async () =>
        {
            await Controller.Get(Guid.Parse(PersonId), Guid.Parse(Id));
        });
    }

    private Task SubmitAction()
    {
        return TryRun(async () =>
        {
            CommandHandlerAnswerDto<PersonAddressDto> answer = await Controller.Save(PersonAddress);
            {
                this.PersonAddress = answer.AggregateRoot == null ? PersonAddress : answer.AggregateRoot;
                this.ValidationResult = answer.ValidationResult;
            }
            if (answer.ValidationResult.IsValid) {
                BackAction();
            }
        });
    }

    private void BackAction()
    {
        NavigationManager.NavigateTo($"/person/edit/{this.PersonId}");
    }
}
