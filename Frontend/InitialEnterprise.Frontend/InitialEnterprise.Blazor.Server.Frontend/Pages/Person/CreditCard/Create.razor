@page "/person/{personId}/creditcard/create"

@inherits Component.ViewComponentBase

@using InitialEnterprise.BlazorFrontend.Controller
@using InitialEnterprise.Shared.Dtos

@inject CreditCardController Controller
@inject NavigationManager NavigationManager

    <form class="ui form">
        <h4 class="ui dividing header"><i class="globe icon"></i>Edit Credit Card</h4>
        <div class="field">
            <label>Card Holder</label>
            <div class="two fields">
                <div class="field @Error(nameof(CreditCard.CreditCardHolderName))">
                    <input type="text" @bind="@CreditCard.CreditCardHolderName" placeholder="Card Holder" />
                </div>
            </div>
        </div>
        <div class="field">
            <label>Card Number</label>
            <div class="two fields">
                <div class="field @Error(nameof(CreditCard.CardNumber))">
                    <input type="text" @bind="@CreditCard.CardNumber" placeholder="CardNumber" />
                </div>
            </div>
        </div>
        <div class="field">
            <label>Expired</label>
            <div class="four fields">
                <div class="field @Error(nameof(CreditCard.ExpireMonth))">
                    <select class="dropdown" @bind="@CreditCard.ExpireMonth">
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <div class="field @Error(nameof(CreditCard.ExpireYear))">
                    <select class="dropdown" @bind="@CreditCard.ExpireYear">
                        @for (int i = 2019; i <= 2025; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="field">
            <label>Type</label>
            <div class="two fields">
                <div class="field @Error(nameof(CreditCard.CreditCardType))">
                    <select class="dropdown" @bind="@CreditCard.CreditCardType">
                        @foreach (var cardType in this.CreditCardTypes)
                        {
                            <option value="@cardType.Name">@cardType.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </form>

<div class="ui small basic icon buttons">
    <button class="ui button" @onclick="@BackAction"><i class="reply icon"></i></button>
    <button class="ui button" @onclick="@SubmitAction"><i class="save icon"></i></button>
</div>

@code {
    [Parameter]
    public String PersonId { get; set; }

    CreditCardDto CreditCard = new CreditCardDto();  

    List<CreditCardTypeDto> CreditCardTypes = new List<CreditCardTypeDto>();

    protected override async Task OnInitializedAsync()
    {
        this.CreditCard.PersonId = Guid.Parse(PersonId);
        this.CreditCardTypes = await this.Controller.GetCreditCardTypes();
    }

    private Task SubmitAction()
    {
        return TryRun(async () =>
        {
            CommandHandlerAnswerDto<CreditCardDto> answer = await Controller.Save(CreditCard);
            {
                this.CreditCard = answer.AggregateRoot == null ? CreditCard : answer.AggregateRoot;                
                this.ValidationResult = answer.ValidationResult;
            }
        });
    }

    private void BackAction()
    {
        NavigationManager.NavigateTo($"/person/edit/{this.PersonId}");
    }
}

