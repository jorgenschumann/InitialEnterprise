@page "/person/list"

@inherits Component.ViewComponentBase

@using InitialEnterprise.BlazorFrontend.Controller
@using InitialEnterprise.Shared.Dtos

@inject PersonController Controller
@inject NavigationManager NavigationManager

<h1>Person</h1>

@if (people == null)
{<p><em>Loading...</em></p>

}
else
{
    <div class="ui small basic icon buttons">
        <button class="ui button" @onclick="@CreateAction"><i class="add icon"></i></button>
    </div>

    <table class="ui celled striped table">
        <thead>
            <tr>
                <th>Actions</th>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Last Name</th>
            </tr>          
        </thead>
        <tbody>
            @foreach (var person in people)
            {
            <tr>
                <td class="collapsing">
                    <div class="ui mini compact menu">
                        <div class="ui small simple dropdown item">
                            <i class="cogs icon"></i>
                            <div class="menu">
                                <a href="/person/edit/@person.Id.ToString()"
                                   class="item">
                                    <i class="edit icon"></i>
                                </a>
                                <a href="/person/delete/@person.Id.ToString()"
                                   class="item">
                                    <i class="trash icon"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </td>
                <td>@person.FirstName</td>
                <td>@person.MiddleName</td>
                <td>@person.LastName</td>
            </tr>
            }
        </tbody>
        <tfoot>          
        </tfoot>
    </table>
}

@code {

    IEnumerable<PersonDto> people;

    protected override async Task OnInitializedAsync()
    {
        await FetchAction();
    }

    private Task FetchAction()
    {
        return TryRun(async () =>
        {
            this.people = await Controller.Get();
        });
    }

    private void CreateAction()
    {
        NavigationManager.NavigateTo($"/person/edit/{Guid.NewGuid().ToString()}");
    }
}
